@model IEnumerable<TasksApp.Models.Audit>

@{
    ViewData["Title"] = "Activity Logs";
}

<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<link href="~/plugins/fontawesome-free/css/all.css" rel="stylesheet" />

<h2>Activity Logs</h2>

<div class="card text-center" style="width: 100%;">
    @*<h1>Audit log example</h1> <br />
        <a href="/" class="btn btn-default">Show only live </a>
        <a href="#" class="btn btn-default" onClick="ShowDeleted()">Show all records </a>
        <a href="#" class="btn btn-default pull-right" onClick="NewRecord()">New record </a>
        <br /><br />*@

    <div class="card-body">
        <div class="tab-content" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                <table class="table table-striped table-bordered table-hover" id="tbl" style=" word-wrap:break-word; width:100%; table-layout:fixed">
                    <thead class="thead-dark">
                        <tr class="table-info">
                            <th>User</th>
                            <th>Activity</th>
                            <th>Alias</th>
                            <th>Date & Time</th>
                            <th>Existing Data</th>
                            <th>New Data</th>
                            <th>Updated Columns</th>

                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>

    <p></p>


    <!-- Modal HTML -->
    <div id="myModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">Audit history</h4>
                </div>
                <div class="modal-body">
                    <div id="audit"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/plugins/jquery/jquery.js"></script>
<link href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css" rel="stylesheet">
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.11.5/datatables.min.js"></script>

<script>

    loadTable();

    function loadTable() {


        Table01 = $("#tbl").DataTable({
            "ajax": {
                "url": "/Audits/GetAudits",
            },
            responsive: true,
            autoWidth: false,
            "columns": [
                { "data": "userEmail", "width": "49%" },
                { "data": "type", "width": "30%" },
                { "data": "tableName", "width": "30%" },
                {
                    "data": "dateTime",
                    'render': function (jsonDate) {

                        if (jsonDate == "0001-01-01T00:00:00") {
                            return " ";
                        }
                        else {
                            var datestr = jsonDate.toString();
                            var date = new Date(datestr.substr(0, 10));
                            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                            var time = datestr.substr(11);
                            var hr = time.substr(0, 2);
                            var min = time.substr(3, 2);
                            var sec = time.substr(6, 2);
                            return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear() + "  " + hr + ":" + min + ":" + sec;
                        }

                    }, "width": "40%"
                },

                {
                    "data": {
                        id: "id"
                    },
                    "render": function (data) {

                        return `
                                <a href="Audits/GetAudit" onClick="GetAuditHistory()" data-id="${data.id}">View Data</a>
                               `;
                    }, "width": "40%"
                },

                {
                    "data": {
                        id: "id"
                    },
                    "render": function (data) {

                        return `
                                <a href="#" onClick="GetAuditHistory()" data-id="${data.id}">View Data</a>
                               `;
                    }, "width": "40%"
                },

                {
                    "data": {
                        id: "id"
                    },
                    "render": function (data) {

                        return `
                                <a href="#" onClick="GetAuditHistory()" data-id="${data.id}">View Data</a>
                               `;
                    }, "width": "40%"
                },

                //{
                //    "data": "dateCreated",
                //    'render': function (jsonDate) {

                //        if (jsonDate == "0001-01-01T00:00:00") {
                //            return " ";
                //        }
                //        else {
                //            var datestr = jsonDate.toString();
                //            var date = new Date(datestr.substr(0, 10));
                //            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                //            var time = datestr.substr(11)
                //            var hr = time.substr(0, 2)
                //            var min = time.substr(3, 2)
                //            var sec = time.substr(6, 2);
                //            return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear() + "  " + hr + ":" + min + ":" + sec;
                //        }

                //    }, "width": "50%"
                //},
                //{ "data": "userEmail", "width": "50%" },
                //{
                //    "data": {
                //        id: "id"
                //    },
                //    "render": function (data) {


                //        return `
                //                        <div class="text-center">
                //                                <a type="button" class="btn btn-warning" onclick="ShowEditModal(${data.id})">
                //                                    <i class="fas fa-edit"></i>
                //                                </a>
                //                                <a onclick=Delete("/TemplateTasks/DeleteTask/${data.id}") class="btn btn-danger text-white" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Delete Task">
                //                                                <i class="fas fa-trash-alt"></i>
                //                                 </a>

                //                        </div>
                //                       `;
                //    }, "width": "30%"
                //},
            ]
        });
    }

    function GetAuditHistory(Id) {
        $("#audit").html("");
        var AuditDisplay = "<table class='table table-condensed' cellpadding='5'>"; // should be done with cleaner dom object construction ... but hey, its an article, not production :)
        $.getJSON("/Audits/GetAudits/" + Id, function (AuditTrail) {

            for (var i = 0; i < AuditTrail.length; i++) {
                AuditDisplay = AuditDisplay + "<tr class='active'><td colspan='2'>Event date: " + AuditTrail[i].DateTimeStamp + "</td>";
                AuditDisplay = AuditDisplay + "<td>Action type: " + AuditTrail[i].Type + "</td></tr>";
                AuditDisplay = AuditDisplay + "<tr class='text-warning'><td>Field name</td><td>Before change</td><td>After change</td></tr>";
                for (var j = 0; j < AuditTrail[i].Changes.length; j++) {
                    AuditDisplay = AuditDisplay + "<tr>";
                    AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].AffectedColumns + "</td>";
                    AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].OldValues + "</td>";
                    AuditDisplay = AuditDisplay + "<td>" + AuditTrail[i].Changes[j].NewValues + "</td>";
                    AuditDisplay = AuditDisplay + "</tr>";
                }
            }
            AuditDisplay = AuditDisplay + "</table>" >
                $("#audit").html(AuditDisplay);
            $("#myModal").modal('show');


        });
    }

    function DeleteRecord(recordID) {
        $.get("/home/delete/" + recordID); // should have return on success etc
        $('#' + recordID).remove();
    }

    function ShowDeleted() {
        window.location.assign('/?ShowDeleted=True');
    }

    function NewRecord() {
        window.location.assign('/home/create');
    }
</script>

@*@model IEnumerable<TasksApp.Models.Audit>

    @{
        ViewData["Title"] = "Index";
    }

    <h2>Index</h2>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TableName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OldValues)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NewValues)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AffectedColumns)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrimaryKey)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TableName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OldValues)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewValues)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AffectedColumns)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrimaryKey)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>*@
