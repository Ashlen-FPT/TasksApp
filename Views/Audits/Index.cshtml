@model IEnumerable<TasksApp.Models.Audit>

@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<link href="~/plugins/fontawesome-free/css/all.css" rel="stylesheet" />

<h2>Index</h2>

<div class="card text-center" style="width: 100%;">
    <div class="card-title">
        <ul class="nav nav-pills mb-3" style="padding:10px" id="pills-tab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true">Audit</a>
            </li>
        </ul>
    </div>

    <div class="card-body">
        <div class="tab-content" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                <table class="table table-striped table-bordered table-hover" id="tbl" style=" word-wrap:break-word; width:100%; table-layout:fixed">
                    <thead class="thead-dark">
                        <tr class="table-info">
                            <th>UserEmail</th>
                            <th>Type</th>
                            <th>TableName</th>
                            <th>DateTime</th>
                            <th>OldValues</th>
                            <th>NewValues</th>
                            <th>AffectedColumns</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="~/plugins/jquery/jquery.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/dt-1.11.5/datatables.min.js"></script>

<script>

    loadTable();

    function loadTable() {

        Table01 = $("#tbl").DataTable({
            "ajax": {
                "url": "/Audits/GetAudits",
            },
            responsive: true,
            autoWidth: false,
            "columns": [
                { "data": "userEmail", "width": "50%" },
                { "data": "type", "width": "30%" },
                { "data": "tableName", "width": "30%" },
                { "data": "dateTime",
                    'render': function (jsonDate) {

                        if (jsonDate == "0001-01-01T00:00:00") {
                            return " ";
                        }
                        else {
                            var datestr = jsonDate.toString();
                            var date = new Date(datestr.substr(0, 10));
                            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                            var time = datestr.substr(11)
                            var hr = time.substr(0, 2)
                            var min = time.substr(3, 2)
                            var sec = time.substr(6, 2);
                            return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear() + "  " + hr + ":" + min + ":" + sec;
                        }

                    }, "width": "40%"
                },

                { "data": "oldValues", "width": "35%" },
                { "data": "newValues", "width": "35%" },
                { "data": "affectedColumns", "width": "40%" },

                //{
                //    "data": "dateCreated",
                //    'render': function (jsonDate) {

                //        if (jsonDate == "0001-01-01T00:00:00") {
                //            return " ";
                //        }
                //        else {
                //            var datestr = jsonDate.toString();
                //            var date = new Date(datestr.substr(0, 10));
                //            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                //            var time = datestr.substr(11)
                //            var hr = time.substr(0, 2)
                //            var min = time.substr(3, 2)
                //            var sec = time.substr(6, 2);
                //            return ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear() + "  " + hr + ":" + min + ":" + sec;
                //        }

                //    }, "width": "50%"
                //},
                //{ "data": "userEmail", "width": "50%" },
                //{
                //    "data": {
                //        id: "id"
                //    },
                //    "render": function (data) {


                //        return `
                //                        <div class="text-center">
                //                                <a type="button" class="btn btn-warning" onclick="ShowEditModal(${data.id})">
                //                                    <i class="fas fa-edit"></i>
                //                                </a>
                //                                <a onclick=Delete("/TemplateTasks/DeleteTask/${data.id}") class="btn btn-danger text-white" style="cursor:pointer" data-toggle="tooltip" data-placement="top" title="Delete Task">
                //                                                <i class="fas fa-trash-alt"></i>
                //                                 </a>

                //                        </div>
                //                       `;
                //    }, "width": "30%"
                //},


            ]
        });
    }
</script>

@*@model IEnumerable<TasksApp.Models.Audit>

    @{
        ViewData["Title"] = "Index";
    }

    <h2>Index</h2>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TableName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OldValues)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NewValues)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AffectedColumns)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PrimaryKey)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TableName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OldValues)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NewValues)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AffectedColumns)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrimaryKey)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>*@
