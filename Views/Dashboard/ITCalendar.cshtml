@{
    ViewBag.Title = "IT Calendar Overview";
}

<style>
    .fc-day-today {
        background: lightgreen !important;
        border: dashed !important;
    }

    .fc-event {
        margin-bottom: 10px;
    }
</style>


<section class="content-header">
    <h1>
        IT Calendar Overview
    </h1>
</section>
<br />


<div class="calendarContainer">
    <div id="calendar"></div>
</div>

@{
    var activeD = (IEnumerable<TasksApp.Models.Active_D>)ViewData["ActiveD"];
    var lengthActive = activeD.Count();

    var hardware = (IEnumerable<TasksApp.Models.Hardware>)ViewData["Hardware"];
    var lengthHardware = hardware.Count();

    var network = (IEnumerable<TasksApp.Models.Networking>)ViewData["Network"];
    var lengthNetwork = network.Count();

    var security = (IEnumerable<TasksApp.Models.Security>)ViewData["Security"];
    var lengthSecurity = security.Count();

    var software = (IEnumerable<TasksApp.Models.Software>)ViewData["Software"];
    var lengthSoftware = software.Count();

}

<table id="table1" hidden>
    @for (int i = 0; i < lengthActive; i++)
    {
        <tr>
            <td>@Html.Encode(activeD.ElementAt(i).Status)</td>
            <td>@Html.Encode(activeD.ElementAt(i).DateCreated.ToString("yyyy-MM-dd"))</td>
        </tr>

    }
</table>

<table id="table2" hidden>
    @for (int i = 0; i < lengthHardware; i++)
    {
        <tr>
            <td>@Html.Encode(hardware.ElementAt(i).Status)</td>
            <td>@Html.Encode(hardware.ElementAt(i).DateCreated.ToString("yyyy-MM-dd"))</td>
        </tr>

    }
</table>

<table id="table3" hidden>
    @for (int i = 0; i < lengthNetwork; i++)
    {
        <tr>
            <td>@Html.Encode(network.ElementAt(i).Status)</td>
            <td>@Html.Encode(network.ElementAt(i).DateCreated.ToString("yyyy-MM-dd"))</td>
        </tr>

    }
</table>

<table id="table4" hidden>
    @for (int i = 0; i < lengthSecurity; i++)
    {
        <tr>
            <td>@Html.Encode(security.ElementAt(i).Status)</td>
            <td>@Html.Encode(security.ElementAt(i).DateCreated.ToString("yyyy-MM-dd"))</td>
        </tr>

    }
</table>

<table id="table5" hidden>
    @for (int i = 0; i < lengthSoftware; i++)
    {
        <tr>
            <td>@Html.Encode(software.ElementAt(i).Status)</td>
            <td>@Html.Encode(software.ElementAt(i).DateCreated.ToString("yyyy-MM-dd"))</td>
        </tr>

    }
</table>

<script>
    let eventsActiveD = loadActiveD();
    let eventsHardware = loadHardware();
    let eventsNetwork = loadNetwork();
    let eventsSecurity = loadSecurity();
    let eventsSoftware = loadSoftware();

    let calendar = initCalendar();

    //Active_D
    function loadActiveD() {
        var url = '/Active_D/Index';
        var bgColor = '';
        var date = document.getElementById("calendar");
        let eventsActiveD = [];
        let data = document.getElementById("table1");
        let trElem = data.getElementsByTagName("tr");
        for (let tr of trElem) {
            let tdElems = tr.getElementsByTagName("td");

            if (tdElems[0].textContent.startsWith("D")) {
                bgColor = 'red';


            }
            else
                if (tdElems[0].textContent.startsWith("P")) {
                    bgColor = 'orange';
                }
                else
                    if (tdElems[0].textContent.startsWith("C")) {
                        bgColor = 'green';
                    }
            let eventObj = {
                title: tdElems[0].innerText,
                start: tdElems[1].innerText,
                color: bgColor,
                url: url,
                date: date,

            }
            eventsActiveD.push(eventObj);
        }

        return eventsActiveD;
    }

    //Hardware
    function loadHardware() {
        var url = '/Hardwares/Index';
        var bgColor = '';
        var date = document.getElementById("calendar");
        let eventsHardware = [];
        let data = document.getElementById("table2");
        let trElem = data.getElementsByTagName("tr");
        for (let tr of trElem) {
            let tdElems = tr.getElementsByTagName("td");

            if (tdElems[0].textContent.startsWith("D")) {
                bgColor = 'red';


            }
            else
                if (tdElems[0].textContent.startsWith("P")) {
                    bgColor = 'orange';
                }
                else
                    if (tdElems[0].textContent.startsWith("C")) {
                        bgColor = 'green';
                    }
            let eventObj = {
                title: tdElems[0].innerText,
                start: tdElems[1].innerText,
                color: bgColor,
                url: url,
                date: date,

            }
            eventsHardware.push(eventObj);
        }

        return eventsHardware;
    }

    //Network
    function loadNetwork() {
        var url = '/Networkings/Index';
        var bgColor = '';
        var date = document.getElementById("calendar");
        let eventsNetwork = [];
        let data = document.getElementById("table3");
        let trElem = data.getElementsByTagName("tr");
        for (let tr of trElem) {
            let tdElems = tr.getElementsByTagName("td");

            if (tdElems[0].textContent.startsWith("D")) {
                bgColor = 'red';


            }
            else
                if (tdElems[0].textContent.startsWith("P")) {
                    bgColor = 'orange';
                }
                else
                    if (tdElems[0].textContent.startsWith("C")) {
                        bgColor = 'green';
                    }
            let eventObj = {
                title: tdElems[0].innerText,
                start: tdElems[1].innerText,
                color: bgColor,
                url: url,
                date: date,

            }
            eventsNetwork.push(eventObj);
        }

        return eventsNetwork;
    }

    //Security
    function loadSecurity() {
        var url = '/Securities/Index';
        var bgColor = '';
        var date = document.getElementById("calendar");
        let eventsSecurity = [];
        let data = document.getElementById("table4");
        let trElem = data.getElementsByTagName("tr");
        for (let tr of trElem) {
            let tdElems = tr.getElementsByTagName("td");

            if (tdElems[0].textContent.startsWith("D")) {
                bgColor = 'red';


            }
            else
                if (tdElems[0].textContent.startsWith("P")) {
                    bgColor = 'orange';
                }
                else
                    if (tdElems[0].textContent.startsWith("C")) {
                        bgColor = 'green';
                    }
            let eventObj = {
                title: tdElems[0].innerText,
                start: tdElems[1].innerText,
                color: bgColor,
                url: url,
                date: date,

            }
            eventsSecurity.push(eventObj);
        }

        return eventsSecurity;
    }

    //Software
    function loadSoftware() {
        var url = '/Softwares/Index';
        var bgColor = '';
        var date = document.getElementById("calendar");
        let eventsSoftware = [];
        let data = document.getElementById("table5");
        let trElem = data.getElementsByTagName("tr");
        for (let tr of trElem) {
            let tdElems = tr.getElementsByTagName("td");

            if (tdElems[0].textContent.startsWith("D")) {
                bgColor = 'red';


            }
            else
                if (tdElems[0].textContent.startsWith("P")) {
                    bgColor = 'orange';
                }
                else
                    if (tdElems[0].textContent.startsWith("C")) {
                        bgColor = 'green';
                    }
            let eventObj = {
                title: tdElems[0].innerText,
                start: tdElems[1].innerText,
                color: bgColor,
                url: url,
                date: date,

            }
            eventsSoftware.push(eventObj);
        }

        return eventsSoftware;
    }



    function initCalendar() {

        var calendarEl = document.getElementById('calendar');
        let calendar = new FullCalendar.Calendar(calendarEl, {
            height: 554,
            initialView: 'dayGridMonth',
            headerToolbar: {
                left: 'dayGridMonth,dayGridWeek,dayGridDay',
                center: 'title',
                right: 'prev,next'
            },
            eventClick: function (info) {
                eventObj = info.event;
                if (eventObj.start) {
                    localStorage.setItem('opDate', eventObj.start.toLocaleDateString('en-US'));
                    localStorage.setItem('Day', eventObj.start.getDay());
                    opStoreDate = localStorage.getItem('opDate');
                    Day = localStorage.getItem('Day');
                    console.log(opStoreDate);
                }
            },
            eventSources: [eventsActiveD , eventsHardware, eventsNetwork , eventsSecurity , eventsSoftware ]

        });

        calendar.render();
        return calendar;
    }

    console.log(localStorage.getItem('opDate'));

</script>

